<!doctype html>
<!--[if lt IE 7]> <html class="no-js lt-ie9 lt-ie8 lt-ie7 <% if(!deferLoad) { %>ng-app: docsApp; <% } %>" lang="en" ng-controller="DocsController"> <![endif]-->
<!--[if IE 7]>    <html class="no-js lt-ie9 lt-ie8 <% if(!deferLoad) { %>ng-app: docsApp; <% } %>" lang="en" ng-controller="DocsController"> <![endif]-->
<!--[if IE 8]>    <html class="no-js lt-ie9 <% if(!deferLoad) { %>ng-app: docsApp; <% } %>" lang="en" ng-controller="DocsController"> <![endif]-->
<!--[if gt IE 8]><!--> <html class="no-js <% if(!deferLoad) { %>ng-app: docsApp; <% } %>" lang="en" ng-controller="DocsController"> <!--<![endif]-->
<head>
  <meta charset="utf-8">
  <meta http-equiv="X-UA-Compatible" content="IE=edge,chrome=1">
  <meta name="Description"
        content="AngularJS is what HTML would have been, had it been designed for building web-apps.
                 Declarative templates with data-binding, MVC, dependency injection and great
                 testability story all implemented with pure client-side JavaScript!">
  <meta name="fragment" content="!">
  <title ng-bind-template="<%= title || 'Doc' %>: {{partialTitle}}">Docs</title>
  <style>
    input, select {
      font-size: 1em;

    }
  </style>

  <script type="text/javascript">
    // dynamically add base tag as well as css and javascript files.
    // we can't add css/js the usual way, because some browsers (FF) eagerly prefetch resources
    // before the base attribute is added, causing 404 and terribly slow loading of the docs app.
    (function() {
      var indexFile = (location.pathname.match(/\/(index[^\.]*\.html)/) || ['', ''])[1],
          rUrl = /(#!\/|<%= sections %>|index[^\.]*\.html).*$/,
          baseUrl = location.href.replace(rUrl, indexFile),
          headEl = document.getElementsByTagName('head')[0],
          sync = true;


      addTag('base', {href: baseUrl});

      addTag('link', {rel: 'stylesheet', hrpef: 'css/docs.css', type: 'text/css'});

      addTag('link', {rel: 'stylesheet', href: 'css/reveal.css'});
      addTag('link', {rel: 'stylesheet', href: 'css/prettify.css', type: 'text/css'});
      addTag('link', {rel: 'stylesheet', href: 'css/default.css'});

      <% _.forEach(styles, function(url) { %>
         addTag('link', {rel: 'stylesheet', href: '<%= url %>', type: 'text/css'}, sync);
      <% }); %>

      addTag('script', {src: 'js/reveal.js'}, sync);

      addTag('script', {src: 'js/marked.js'}, sync);

      <% _.forEach(scripts, function(url) { %>
        addTag('script', {src: '<%= url %>'}, sync);
      <% }); %>
      <% if(!deferLoad) { %>

      addTag('script', {src: '//ajax.googleapis.com/ajax/libs/jquery/1.11.1/jquery.min.js'}, sync);
      addTag('script', {src: 'js/google-code-prettify.js'}, sync);
      addTag('script', {src: 'js/angular-bootstrap.js'}, sync);
      addTag('script', {src: 'js/angular-bootstrap-prettify.js'}, sync);
      addTag('script', {src: 'js/docs-setup.js'}, sync);
      addTag('script', {src: 'js/docs.js'}, sync);
      <% } %>
      function addTag(name, attributes, sync) {
        var el = document.createElement(name),
            attrName;

        for (attrName in attributes) {
          el.setAttribute(attrName, attributes[attrName]);
        }

        sync ? document.write(outerHTML(el)) : headEl.appendChild(el);
      }

      function outerHTML(node){
        // if IE, Chrome take the internal method otherwise build one
        return node.outerHTML || (
            function(n){
                var div = document.createElement('div'), h;
                div.appendChild(n);
                h = div.innerHTML;
                div = null;
                return h;
            })(node);
      }
    })();

  </script>
</head>

<body>


    <div class="reveal">
            <div class="slides">
                    <section><h1>Angular.js</h1></section>
                    <section ng-include src="currentPage.partialUrl"></section>
                    <section ng-repeat="page in pages track by page.url" ng-include src="page.partialUrl">
                    </section>

            </div>
        </div>


</body>
<script>
    Reveal.initialize();
</script>
</html>
